@page "/patients"

@using DataLibrary
@using DataLibrary.Models

@using BlazorTable

@inject IPatientDAL _db

@inject IModalService Modal

@inject NavigationManager NavManager

<h3>Patients</h3>
<br />

@if (patients == null)
{
    <p><em>Loading...</em></p>
}
else
{
<Table TableItem="PatientModel" Items="patients" PageSize="50" ColumnReorder="true">
    <Column TableItem="PatientModel" Title="Id" Field="@(x => x.Id)" Sortable="true" Filterable="true" Width="6%" DefaultSortColumn="true" />
    <Column TableItem="PatientModel" Title="OPD" Field="@(x => x.OPDNumber)" Sortable="true" Filterable="true" Width="7.5%" />
    <Column TableItem="PatientModel" Title="FirstName" Field="@(x => x.FirstName)" Sortable="true" Filterable="true" Width="11%" />
    <Column TableItem="PatientModel" Title="LastName" Field="@(x => x.LastName)" Sortable="true" Filterable="true" Width="11%" />
    <Column TableItem="PatientModel" Title="Gender" Field="@(x => x.Gender)" Sortable="true" Filterable="true" Width="7.5%" />
    <Column TableItem="PatientModel" Title="Phone" Field="@(x => x.Phone)" Sortable="true" Filterable="true" Width="10%" />
    <Column TableItem="PatientModel" Title="Age" Field="@(x => x.DOB)" Sortable="true" Filterable="true" Width="5%">
        <Template>
            @(DateTime.Today.Year - context.DOB.Year)
        </Template>
    </Column>
    <Column TableItem="PatientModel" Title="Address" Field="@(x => x.Address)" Sortable="true" Filterable="true" Width="10%" />
    <Column TableItem="PatientModel" Title="City" Field="@(x => x.City)" Sortable="true" Filterable="true" Width="10%" />
    <Column TableItem="PatientModel" Title="Disease" Field="@(x => x.Notes)" Sortable="true" Filterable="true" Width="13%" />
    <Column TableItem="PatientModel" Title="Actions" Field="@(x => x.Id)" Width="10%">
        <Template>
            <button type="submit" class="oi oi-eye btn btn-primary" @onclick="@(e => NavigateToPatientView(context.Id))" />
            <button type="submit" class="oi oi-trash btn btn-primary" @onclick="@(e => DeletePatient(context.Id))" />
        </Template>
    </Column>
    <Pager ShowPageNumber="true" ShowTotalCount="true" ShowPageSizes="true" AlwaysShow="true" PageSizes="pageSizes" />
</Table>
}

@code {

    List<int> pageSizes = new List<int> { 10, 25, 50, 100, 200, 500 };

    List<PatientModel> patients;

    protected override async Task OnInitializedAsync()
    {
        patients = await _db.GetPatients();
    }

    private async Task DeletePatient(int patientId)
    {
        var options = new ModalOptions() { DisableBackgroundCancel = true, HideCloseButton = true };
        var modal = Modal.Show<Confirm>("Deleting Patient", options);

        var result = await modal.Result;

        if (!result.Cancelled)
        {
            await _db.DeletePatient(patientId);

            await OnInitializedAsync();
        }
    }

    private void NavigateToPatientView(int patientId)
    {
        NavManager.NavigateTo($"/patient/{patientId}");
    }

}
