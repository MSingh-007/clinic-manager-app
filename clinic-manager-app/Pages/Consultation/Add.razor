@page "/consultation/add/{PatientId}"

@using DataLibrary
@using DataLibrary.Models

@inject IConsultationDAL _cdb

@inject IModalService Modal

<EditForm Model=@newConsultation OnValidSubmit="@InsertConsultation" >
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="add-consultation-modal">
        <div class="form-group row add-consultation-modal">
            <label for="date" class="col-sm-2 col-form-label">Date</label>
            <div class="col-lg-4">
                <InputDate id="date" class="form-control" @bind-Value="newConsultation.Date" />
            </div>
        </div>

        <div class="form-group row">
            <label for="notes" class="col-sm-2 col-form-label">Notes</label>
            <div class="col-md-4">
                <InputTextArea id="notes" class="form-control" @bind-Value="newConsultation.Notes" />
            </div>
        </div>

        <div class="form-group row">
            <label for="maramTherapyDone" class="col-sm-2 col-form-label">MaramTherapyDone</label>
            <div class="col-md-4">
                <InputCheckbox id="maramTherapyDone" class="form-control" @bind-Value="newConsultation.MaramTherapyDone" />
            </div>
        </div>

        <button type="submit" class="btn btn-primary"> Submit </button>
    </div>
</EditForm>

<!--button @onclick="Cancel" class="btn btn-secondary">Cancel</button-->

@code {

    [Parameter]
    public string PatientId { get; set; }

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    DisplayConsultationModel newConsultation = new DisplayConsultationModel();

    private async Task InsertConsultation()
    {
        int id = 1;
        if (Int32.TryParse(PatientId, out id))
        {
            ConsultationModel c = new ConsultationModel
            {
                Date = newConsultation.Date,
                Notes = newConsultation.Notes,
                MaramTherapyDone = newConsultation.MaramTherapyDone,
                PatientId = id
            };

            await _cdb.AddConsultation(c);
            await BlazoredModal.Close(ModalResult.Ok(true));
        }
    }

    //void Cancel() => BlazoredModal.Cancel();
}
